// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: permissions.sql

package queries

import (
	"context"
)

const addPermissionsForUser = `-- name: AddPermissionsForUser :one
INSERT INTO users_permissions (user_id, permission_id)
SELECT $1, permissions.id FROM permissions WHERE permissions.code = ANY($2)
RETURNING user_id, permission_id
`

type AddPermissionsForUserParams struct {
	UserID int64
	Code   string
}

func (q *Queries) AddPermissionsForUser(ctx context.Context, arg AddPermissionsForUserParams) (UsersPermission, error) {
	row := q.db.QueryRow(ctx, addPermissionsForUser, arg.UserID, arg.Code)
	var i UsersPermission
	err := row.Scan(&i.UserID, &i.PermissionID)
	return i, err
}

const getAllPermissionsForUser = `-- name: GetAllPermissionsForUser :one
SELECT permissions.code
FROM permissions
         INNER JOIN users_permissions ON users_permissions.permission_id = permissions.id
         INNER JOIN users ON users_permissions.user_id = users.id
WHERE users.id = $1
`

func (q *Queries) GetAllPermissionsForUser(ctx context.Context, id int64) (string, error) {
	row := q.db.QueryRow(ctx, getAllPermissionsForUser, id)
	var code string
	err := row.Scan(&code)
	return code, err
}
